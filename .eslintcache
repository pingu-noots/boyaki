[{"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/reportWebVitals.js":"1","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/App.js":"2","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/index.js":"3","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/aws-exports.js":"4","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/containers/AllPosts.js":"5","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/containers/Sidebar.js":"6","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/containers/PostsBySpecifiedUser.js":"7","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/components/PostList.js":"8","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/graphql/mutations.js":"9","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/graphql/subscriptions.js":"10","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/graphql/queries.js":"11","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/containers/Timeline.js":"12"},{"size":362,"mtime":1610373483499,"results":"13","hashOfConfig":"14"},{"size":2178,"mtime":1610799679265,"results":"15","hashOfConfig":"14"},{"size":500,"mtime":1610373483497,"results":"16","hashOfConfig":"14"},{"size":692,"mtime":1611412212354,"results":"17","hashOfConfig":"14"},{"size":2198,"mtime":1610802867120,"results":"18","hashOfConfig":"14"},{"size":4338,"mtime":1612082252173,"results":"19","hashOfConfig":"14"},{"size":4168,"mtime":1611412472841,"results":"20","hashOfConfig":"14"},{"size":3448,"mtime":1610802982684,"results":"21","hashOfConfig":"14"},{"size":3622,"mtime":1611573022241,"results":"22","hashOfConfig":"14"},{"size":1372,"mtime":1611409927733,"results":"23","hashOfConfig":"14"},{"size":4406,"mtime":1611573022156,"results":"24","hashOfConfig":"14"},{"size":2617,"mtime":1611473738440,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11t8pfe",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/reportWebVitals.js",[],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/App.js",[],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/index.js",[],["52","53"],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/aws-exports.js",[],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/containers/AllPosts.js",[],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/containers/Sidebar.js",[],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/containers/PostsBySpecifiedUser.js",["54","55","56"],"import React, { useState, useEffect, useReducer } from 'react';\n\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport Auth from '@aws-amplify/auth';\nimport { useParams, useHistory } from 'react-router';\nimport { Box, Button} from '@material-ui/core';\n\nimport { listPostsBySpecificOwner, getFollowRelationship } from '../graphql/queries';\nimport { onCreatePost } from '../graphql/subscriptions';\nimport { createFollowRelationship, deleteFollowRelationship } from '../graphql/mutations';\nimport PostList from '../components/PostList';\nimport Sidebar from './Sidebar';\n\nconst SUBSCRIPTION = 'SUBSCRIPTION';\nconst INITIAL_QUERY = 'INITIAL_QUERY';\nconst ADDITIONAL_QUERY = 'ADDITIONAL_QUERY';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case INITIAL_QUERY:\n      return action.posts;\n    case ADDITIONAL_QUERY:\n      return [...state, ...action.posts]\n    case SUBSCRIPTION:\n      return [action.post, ...state]\n    default:\n      return state;\n  }\n};\n\nexport default function PostsBySpecifiedUser() {\n  const { userId } = useParams();\n\n  const [posts, dispatch] = useReducer(reducer, []);\n  const [nextToken, setNextToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isFollowing, setIsFollowing] = useState(false);\n\n  const getPosts = async (type, nextToken = null) => {\n    const res = await API.graphql(graphqlOperation(listPostsBySpecificOwner, {\n      owner: userId,\n      sortDirection: 'DESC',\n      limit: 20, //default = 10\n      nextToken: nextToken,\n    }));\n    console.log(res);\n    dispatch({ type: type, posts: res.data.listPostsBySpecificOwner.items })\n    setNextToken(res.data.listPostsBySpecificOwner.nextToken);\n    setIsLoading(false);\n  }\n\n  const getIsFollowing = async ({followerId, followeeId}) => {\n    const res = await API.graphql(graphqlOperation(getFollowRelationship,{\n      followeeId: followeeId,\n      followerId: followerId,\n    }));\n    console.log(res)\n    return res.data.getFollowRelationship !== null\n  }\n\n  const getAdditionalPosts = () => {\n    if (nextToken === null) return; //Reached the last page\n    getPosts(ADDITIONAL_QUERY, nextToken);\n  }\n\n  const follow = async () => {\n    console.log('follow')\n    const input = {\n      followeeId: userId,\n      followerId: currentUser.username,\n      timestamp: Date.now(),\n    }\n    const res = await API.graphql(graphqlOperation(createFollowRelationship, {input: input}));\n    if(!res.data.createFollowRelationship.erros) setIsFollowing(true);\n    console.log(res);\n  }\n\n  const unfollow = async() => {\n    console.log('unfollow');\n    const input = {\n      followeeId: userId,\n      followerId: currentUser.username,\n    }\n    const res = await API.graphql(graphqlOperation(deleteFollowRelationship,{input: input}));\n\n    if(!res.data.deleteFollowRelationship.erros) setIsFollowing(false);\n    console.log(res)\n  }\n\n  useEffect(() => {\n    const init = async() => {\n      const currentUser = await Auth.currentAuthenticatedUser();\n      setCurrentUser(currentUser);\n\n      setIsFollowing(await getIsFollowing({followeeId: userId, followerId: currentUser.username}));\n\n      getPosts(INITIAL_QUERY);\n    }\n    init()\n\n    const subscription = API.graphql(graphqlOperation(onCreatePost)).subscribe({\n      next: (msg) => {\n        const post = msg.value.data.onCreatePost;\n        if (post.owner !== userId) return;\n        dispatch({ type: SUBSCRIPTION, post: post });\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n\n\n  return (\n    <React.Fragment>\n      <Sidebar\n        activeListItem='profile'\n      />\n      <PostList\n        isLoading={isLoading}\n        posts={posts}\n        getAdditionalPosts={getAdditionalPosts}\n        listHeaderTitle={userId}\n        listHeaderTitleButton={\n          ( currentUser && userId !== currentUser.username ) &&\n          ( isFollowing ?\n            <Button  variant='contained' color='primary' onClick={unfollow}>Following</Button>\n          :\n            <Button variant='outlined' color='primary' onClick={follow}>Follow</Button>\n          )\n        }\n      />\n    </React.Fragment>\n  )\n}\n","/Users/h.takahashi/amplify-sns-workshop/boyaki/src/components/PostList.js",[],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/graphql/mutations.js",[],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/graphql/subscriptions.js",[],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/graphql/queries.js",[],"/Users/h.takahashi/amplify-sns-workshop/boyaki/src/containers/Timeline.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":5,"column":21,"nodeType":"63","messageId":"64","endLine":5,"endColumn":31},{"ruleId":"61","severity":1,"message":"65","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":110,"column":6,"nodeType":"68","endLine":110,"endColumn":8,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPosts' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [getPosts, userId]",{"range":"75","text":"76"},[3547,3549],"[getPosts, userId]"]